# This is a basic workflow to help you get started with Actions

name: CI Build Workflow for ueye_cam

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, test_build ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  BEFORE_INIT: './.github/workflows/Install_ueye_api.sh'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: melodic, ROS_REPO: main}
    env:
      CCACHE_DIR: /github/home/.ccache # Directory for ccache (and how we enable ccache in industrial_ci)

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:   
      - uses: actions/checkout@v2
        
      #- name: Install IDS deps
      #  run: |
      #    pwd
      #    wget -q --tries=2 https://de.ids-imaging.com/files/downloads/ids-software-suite/software/linux-desktop/ids-software-suite-linux-${SW_VERSION}-64.tgz -P /tmp
      #    mkdir /tmp/ids-software-suite-linux
      #    tar -xzf /tmp/ids-software-suite-linux-${SW_VERSION}-64.tgz -C /tmp/ids-software-suite-linux
      #    sudo /tmp/ids-software-suite-linux/ueye_*_amd64.run --auto
      #    ldconfig -p | grep ueye
      #  env:
      #    SW_VERSION: 4.94
          
      #- name: Check if IDS is installed
      #  run: |
      #    ldconfig -p | grep ueye
          
          
      # This step will fetch/store the directory used by ccache before/after the ci run
      - uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ROS_REPO }}
      
      # Run industrial_ci
      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{ matrix.env }}
      
